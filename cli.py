from subprocess import Popen, PIPE
from jinja2 import Template

def main():

    with open("docker-compose.yaml.template", "r") as docker_compose_template_file:
        docker_compose_template = docker_compose_template_file.read()    
    t = Template(docker_compose_template)
    docker_compose = t.render(JAVA_VERSION="java8-lookup-disabled")
    with open("docker-compose.yaml", "w") as docker_compose_file:
        docker_compose_file.write(docker_compose)


    "poc_template/pom.xml"

    docker_compose_up_process = Popen(["docker-compose", "up"], stdout=PIPE, stderr=PIPE)
    while True:
        for line in iter(docker_compose_up_process.stdout.readline,''):
            output = line.rstrip()
            if "Remote Code Execution gained!!!" in str(output):
                print("This version of the application is vulnerable !!!!")
                docker_compose_down_process = Popen(["docker-compose", "down"], stdout=PIPE, stderr=PIPE)
                docker_compose_down_process.communicate()
                exit(1)
            if "has to be an integer." in str(output):
                print("This version of the application is not vulnerable")
                docker_compose_down_process = Popen(["docker-compose", "down"], stdout=PIPE, stderr=PIPE)
                docker_compose_down_process.communicate()
                exit(0)
            
        
main()
